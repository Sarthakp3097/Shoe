//In this program, we create an ArrayList of Shoe objects, which holds references to objects of the subclasses. We add four objects to the ArrayList: one object of the Shoe class, two objects of the AthleticShoe class, and one object of the DressShoe class.
//
//We then use two for-each loops to iterate through the ArrayList. In the first loop, we display each object using its toString method and increase the price of all shoes by $10. In the second loop, we use an if-else statement to check the type of the object and call a method that has been overridden in the corresponding subclass. We also call the printDetails method on the subclass objects to display additional information about the shoes.
//
//Note that we need to cast the Shoe object to the corresponding subclass type in order to call the overridden method or the printDetails method.


import java.util.ArrayList;

public class ShoeDriver {

    public static void main(String[] args) {
        ArrayList<Shoe> shoes = new ArrayList<>();

        shoes.add(new Shoe("Generic Brand", 50));
        shoes.add(new AthleticShoe("Nike", 100, "Running"));
        shoes.add(new AthleticShoe("Adidas", 80, "Basketball"));
        shoes.add(new DressShoe("Jimmy Choo", 800, "Satin"));
        shoes.add(new DressShoe("Hermes", 1125, "Leather"));


        for (Shoe shoe : shoes) {
            System.out.println(shoe);
            shoe.setPrice(shoe.getPrice() + 10); // increase price of all shoes by $10
            System.out.println("New Price: $" + shoe.getPrice());
            System.out.println();
        }

        for (Shoe shoe : shoes) {
            System.out.println(shoe);
            if (shoe instanceof AthleticShoe) {
                ((AthleticShoe) shoe).printDetails();
            } else if (shoe instanceof DressShoe) {
                ((DressShoe) shoe).printDetails();
            }
            System.out.println();
        }
    }
}
